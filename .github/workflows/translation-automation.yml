name: Translation Automation

on:
  push:
    branches: [master]
    paths:
      - 'i18n/**'

jobs:
  automate-translation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install GitHub CLI and jq
        run: sudo apt-get update && sudo apt-get install -y gh jq

      - name: Create branch
        run: |
          BRANCH_NAME="translation-update/$(date +%Y%m%d%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Update translation file
        run: |
          TARGET_FILE="i18n/en.json"
          mkdir -p i18n
          # Check if file exists and is valid JSON
          if [ -f "$TARGET_FILE" ] && jq empty "$TARGET_FILE" >/dev/null 2>&1; then
            # Update existing valid JSON file
            jq '.last_updated = "'"$(date +%Y-%m-%dT%H:%M:%S)"'"' "$TARGET_FILE" > temp.json
            mv temp.json "$TARGET_FILE"
          else
            # Create new file if it doesn't exist or is invalid
            echo "{\"last_updated\": \"$(date +%Y-%m-%dT%H:%M:%S)\", \"translations\": {}}" > "$TARGET_FILE"
          fi
          echo "Updated $TARGET_FILE"
        shell: bash

      - name: Commit changes
        run: |
          git add i18n/*.json
          git commit -m "Update translation file i18n/en.json" || echo "No changes to commit"
          git push origin ${{ env.BRANCH_NAME }}
        shell: bash

      - name: Wait for branch availability
        run: |
          for i in {1..10}; do
            if git ls-remote --exit-code origin ${{ env.BRANCH_NAME }}; then
              echo "Branch detected after $i attempts"
              exit 0
            fi
            sleep 1
          done
          echo "Error: Branch never became available"
          exit 1
        shell: bash

      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "Translation Update for i18n/en.json" \
                       --body "Automated update of translation file" \
                       --base master \
                       --head ${{ env.BRANCH_NAME }}
        shell: bash